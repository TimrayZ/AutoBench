############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. you are in section 2. in this section, please give me the test scenarios. you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 
3. your information is:
RTL circuit problem description:
Create a 2-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
RTL testbench specification:
{
  "important data": "",
  "technical specifications": [
    "1. The design implements a 2-1 multiplexer with inputs a and b, each being 100 bits wide.",
    "2. The selection input, sel, is a single bit that determines whether input 'a' or 'b' is routed to the output.",
    "3. When sel=0, the output 'out' should equal 'a'.",
    "4. When sel=1, the output 'out' should equal 'b'.",
    "5. The output 'out' is also 100 bits wide.",
    "6. All inputs and outputs are active on the rising edge of the clock signal."
  ]
}
DUT header:
module top_module (
	input [99:0] a,
	input [99:0] b,
	input sel,
	output [99:0] out
);


you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 

your response must be in JSON form. example:
{
  "scenario 1": "...", # each content is a string
  "scenario 2": "...",
  "scenario 3": "...",
  ...
}


########## assistant ##########
{
  "scenario 1": "Set inputs a and b to some arbitrary 100-bit values (e.g., a = 100'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, b = 100'b1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111) and sel = 0. Apply the clock signal and wait for one clock cycle to observe the output.",
  "scenario 2": "Keep input a the same (e.g., a = 100'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000) and change b to a different 100-bit value (e.g., b = 100'b1010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010) while sel = 1. Apply the clock signal and wait for one clock cycle to observe the output.",
  "scenario 3": "Set inputs a and b to the same value (e.g., a = b = 100'b111100001111000011110000111100001111000011110000111100001111000011110000111100001111000011110000) and sel = 0. Apply the clock signal and wait for one clock cycle to observe the output.",
  "scenario 4": "Choose arbitrary values for a = 100'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001 and b = 100'b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010 with sel = 1. Apply the clock signal and wait for one clock cycle to observe the output.",
  "scenario 5": "Change only the sel line to toggle between 0 and 1 while keeping inputs a and b constant at their initial values (previously set in scenario 1). Apply clock signal twice, once for sel = 0 and once for sel = 1. Wait for one clock cycle after each change and observe the output."
}

