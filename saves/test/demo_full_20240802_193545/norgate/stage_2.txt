############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. you are in section 2. in this section, please give me the test scenarios. you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 
3. your information is:
RTL circuit problem description:
Create a module that implements a NOR gate.
RTL testbench specification:
{
  "important data": "",
  "technical specifications": [
    "0: The DUT is a NOR gate module, which has two input signals (a, b) and one output signal (out).",
    "1: The output signal 'out' should be high (1) only when both input signals 'a' and 'b' are low (0).",
    "2: All possible combinations of the input signals 'a' and 'b' (00, 01, 10, 11) should be tested to verify the correct functionality of the NOR gate.",
    "3: The testbench should initialize the input signals, apply all combinations of inputs, and monitor the output against the expected results for each combination.",
    "4: The expected output for the input combinations is as follows: '00' -> 1, '01' -> 0, '10' -> 0, '11' -> 0."
  ]
}
DUT header:
module top_module(
	input a, 
	input b,
	output out
);


you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 

your response must be in JSON form. example:
{
  "scenario 1": "...", # each content is a string
  "scenario 2": "...",
  "scenario 3": "...",
  ...
}


########## assistant ##########
{
  "scenario 1": "Initialize inputs a and b to 0. Apply a = 0, b = 0 for 1 clock cycle.",
  "scenario 2": "Change inputs to a = 0, b = 1. Apply for 1 clock cycle.",
  "scenario 3": "Change inputs to a = 1, b = 0. Apply for 1 clock cycle.",
  "scenario 4": "Change inputs to a = 1, b = 1. Apply for 1 clock cycle."
}

