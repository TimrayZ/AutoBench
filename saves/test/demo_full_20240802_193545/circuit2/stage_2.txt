############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. you are in section 2. in this section, please give me the test scenarios. you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 
3. your information is:
RTL circuit problem description:
This is a combinational circuit. Read the simulation waveforms to determine what the circuit does, then implement it.

// time            a               b               c               d               q               
// 0ns             0               0               0               0               1               
// 5ns             0               0               0               0               1               
// 10ns            0               0               0               0               1               
// 15ns            0               0               0               0               1               
// 20ns            0               0               0               1               0               
// 25ns            0               0               1               0               0               
// 30ns            0               0               1               1               1               
// 35ns            0               1               0               0               0               
// 40ns            0               1               0               1               1               
// 45ns            0               1               1               0               1               
// 50ns            0               1               1               1               0               
// 55ns            1               0               0               0               0               
// 60ns            1               0               0               1               1               
// 65ns            1               0               1               0               1               
// 70ns            1               0               1               1               0               
// 75ns            1               1               0               0               1               
// 80ns            1               1               0               1               0               
// 85ns            1               1               1               0               0               
// 90ns            1               1               1               1               1       
RTL testbench specification:
{
  "important data": "Simulation waveform data showing input-output relationship for signals a, b, c, d and output q.",
  "technical specifications": [
    "1. Module header defined as: module top_module (input a, input b, input c, input d, output q);",
    "2. The DUT is a combinational circuit with 4 inputs (a, b, c, d) and 1 output (q).",
    "3. Testbench should generate all possible combinations of inputs a, b, c, and d and apply them to the DUT.",
    "4. Expected output q must be verified against the provided waveform data at corresponding time intervals.",
    "5. Testbench should include initial conditions and time delay statements to match the provided input-output time mapping."
  ]
}
DUT header:
module top_module (
	input a, 
	input b, 
	input c, 
	input d,
	output q
);


you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 

your response must be in JSON form. example:
{
  "scenario 1": "...", # each content is a string
  "scenario 2": "...",
  "scenario 3": "...",
  ...
}


########## assistant ##########
{
  "scenario 1": "Initialize inputs a, b, c, d to 0 at time 0ns. Maintain these values until time 20ns.",
  "scenario 2": "At time 20ns, set input d to 1 while keeping a, b, and c at 0. Maintain these values until time 25ns.",
  "scenario 3": "At time 25ns, set input c to 1 while keeping a, b at 0 and d at 1. Maintain these values until time 30ns.",
  "scenario 4": "At time 30ns, change input b to 1 while keeping a at 0, c at 1, and d at 1. Maintain these values until time 35ns.",
  "scenario 5": "At time 35ns, set input a to 0, b to 1, c to 0, and d to 0. Maintain these values until time 40ns.",
  "scenario 6": "At time 40ns, set input d to 1 while keeping a at 0, b at 1, and c at 0. Maintain these values until time 45ns.",
  "scenario 7": "At time 45ns, set input c to 1 while keeping a at 0, b at 1, and d at 0. Maintain these values until time 50ns.",
  "scenario 8": "At time 50ns, set input d to 1 while keeping a at 0, b at 1, and c at 1. Maintain these values until time 55ns.",
  "scenario 9": "At time 55ns, change input a to 1 while keeping b, c, and d at 0. Maintain these values until time 60ns.",
  "scenario 10": "At time 60ns, set input d to 1 while keeping a at 1, b at 0, and c at 0. Maintain these values until time 65ns.",
  "scenario 11": "At time 65ns, set input c to 1 while keeping a at 1, b at 0, and d at 1. Maintain these values until time 70ns.",
  "scenario 12": "At time 70ns, set input d to 1 while keeping a at 1, b at 0, and c at 1. Maintain these values until time 75ns.",
  "scenario 13": "At time 75ns, set input b to 1 while keeping a at 1, c at 0, and d at 0. Maintain these values until time 80ns.",
  "scenario 14": "At time 80ns, set input d to 1 while keeping a at 1, b at 1, and c at 0. Maintain these values until time 85ns.",
  "scenario 15": "At time 85ns, set input c to 1 while keeping a at 1, b at 1, and d at 1. Maintain these values until time 90ns.",
  "scenario 16": "At time 90ns, maintain inputs a at 1, b at 1, c at 1, and d at 1 until the end of the simulation."
}

