############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
Please generate the verilog RTL code according to the following description and header information:
problem description:
Implement the circuit described by the Karnaugh map below.

//        ab
// cd   00 01 11 10
//  00 | 0 | 1 | 0 | 1 |
//  01 | 1 | 0 | 1 | 0 |
//  11 | 0 | 1 | 0 | 1 |
//  10 | 1 | 0 | 1 | 0 |
RTL header:
module top_module (
	input a, 
	input b,
	input c,
	input d,
	output reg out
);

please only reply verilog codes. reply_format:
```verilog
your_code_here...
```


########## assistant ##########
```verilog
module top_module (
	input a, 
	input b,
	input c,
	input d,
	output reg out
);

always @(*) begin
	case ({c, d, b, a})
		4'b0000: out = 0; // cd = 00, ab = 00
		4'b0001: out = 1; // cd = 00, ab = 01
		4'b0011: out = 0; // cd = 00, ab = 11
		4'b0010: out = 1; // cd = 00, ab = 10
		4'b0100: out = 1; // cd = 01, ab = 00
		4'b0101: out = 0; // cd = 01, ab = 01
		4'b0111: out = 1; // cd = 01, ab = 11
		4'b0110: out = 0; // cd = 01, ab = 10
		4'b1100: out = 0; // cd = 11, ab = 00
		4'b1101: out = 1; // cd = 11, ab = 01
		4'b1111: out = 0; // cd = 11, ab = 11
		4'b1110: out = 1; // cd = 11, ab = 10
		4'b1000: out = 1; // cd = 10, ab = 00
		4'b1001: out = 0; // cd = 10, ab = 01
		4'b1011: out = 1; // cd = 10, ab = 11
		4'b1010: out = 0; // cd = 10, ab = 10
		default: out = 0;
	endcase
end

endmodule
```

