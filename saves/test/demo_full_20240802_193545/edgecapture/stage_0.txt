############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
Please generate the verilog RTL code according to the following description and header information:
problem description:
For each bit in a 32-bit vector, capture when the input signal changes from 1 in one clock cycle to 0 the next. "Capture" means that the output will remain 1 until the register is reset (active high synchronous reset).
RTL header:
module top_module(
	input clk,
	input reset,
	input [31:0] in,
	output reg [31:0] out);

please only reply verilog codes. reply_format:
```verilog
your_code_here...
```


########## assistant ##########
```verilog
module top_module(
    input clk,
    input reset,
    input [31:0] in,
    output reg [31:0] out
);
    reg [31:0] previous_in;

    always @(posedge clk) begin
        if (reset) begin
            out <= 32'b0;
            previous_in <= 32'b0;
        end else begin
            previous_in <= in;
            out <= out | ((previous_in == 32'b1) & (in == 32'b0));
        end
    end
endmodule
```

