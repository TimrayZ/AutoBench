############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########

1. Your task is to complete a given verilog testbench code. This testbench is for a verilog RTL module code (we call it as "DUT", device under test). This circuit is a sequential circuit. The infomation we have is 
- 1.1. the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". 
- 1.2. the module header.
- 1.3. test scenarios which determines values and sequential information of test vectors
- 1.4. the testbench structure
- 1.5. the instruction of writing our testbench

DUT header:
module top_module (
	input clock,
	input a, 
	output reg p,
	output reg q
);

Your other information:
RTL circuit problem description:
This is a sequential circuit. Read the simulation waveforms to determine what the circuit does, then implement it.

// time            clock           a               p               q               
// 0ns             0               0               x               x               
// 5ns             0               0               x               x               
// 10ns            0               0               x               x               
// 15ns            0               0               x               x               
// 20ns            0               0               x               x               
// 25ns            1               0               0               x               
// 30ns            1               0               0               x               
// 35ns            1               0               0               x               
// 40ns            1               0               0               x               
// 45ns            1               0               0               x               
// 50ns            1               0               0               x               
// 55ns            0               0               0               0               
// 60ns            0               0               0               0               
// 65ns            0               0               0               0               
// 70ns            0               1               0               0               
// 75ns            0               0               0               0               
// 80ns            0               1               0               0               
// 85ns            1               0               0               0               
// 90ns            1               1               1               0               
// 95ns            1               0               0               0               
// 100ns           1               1               1               0               
// 105ns           1               0               0               0               
// 110ns           1               1               1               0               
// 115ns           0               0               1               1               
// 120ns           0               1               1               1               
// 125ns           0               0               1               1               
// 130ns           0               1               1               1               
// 135ns           0               0               1               1               
// 140ns           0               0               1               1               
// 145ns           1               0               0               1               
// 150ns           1               0               0               1               
// 155ns           1               0               0               1               
// 160ns           1               0               0               1               
// 165ns           1               1               1               1               
// 170ns           1               0               0               1               
// 175ns           0               1               0               0               
// 180ns           0               0               0               0               
// 185ns           0               1               0               0               
// 190ns           0               0               0               0       
IMPORTANT - test scenario (Please determine the values of input signals according to these test scenarios.):
{
  "scenario 1": "Initialize inputs: clock = 0, a = 0. Wait for 5ns.",
  "scenario 2": "Toggle clock to 1, apply a = 0. Wait for 5ns.",
  "scenario 3": "Maintain clock at 1, apply a = 0. Wait for 5ns.",
  "scenario 4": "Maintain clock at 1, apply a = 0. Wait for 5ns.",
  "scenario 5": "Maintain clock at 1, apply a = 0. Wait for 5ns.",
  "scenario 6": "Maintain clock at 1, apply a = 0. Wait for 5ns.",
  "scenario 7": "Toggle clock to 0, apply a = 0. Wait for 5ns.",
  "scenario 8": "Maintain clock at 0, apply a = 0. Wait for 5ns.",
  "scenario 9": "Maintain clock at 0, apply a = 1. Wait for 5ns.",
  "scenario 10": "Toggle clock to 1, apply a = 0. Wait for 5ns.",
  "scenario 11": "Toggle clock to 1, apply a = 1. Wait for 5ns.",
  "scenario 12": "Maintain clock at 1, apply a = 0. Wait for 5ns.",
  "scenario 13": "Maintain clock at 1, apply a = 1. Wait for 5ns.",
  "scenario 14": "Toggle clock to 0, apply a = 0. Wait for 5ns.",
  "scenario 15": "Maintain clock at 0, apply a = 1. Wait for 5ns.",
  "scenario 16": "Maintain clock at 0, apply a = 0. Wait for 5ns.",
  "scenario 17": "Toggle clock to 1, apply a = 1. Wait for 5ns.",
  "scenario 18": "Maintain clock at 1, apply a = 1. Wait for 5ns.",
  "scenario 19": "Toggle clock to 0, apply a = 0. Wait for 5ns.",
  "scenario 20": "Toggle clock to 1, apply a = 0. Wait for 5ns.",
  "scenario 21": "Toggle clock to 0, maintain a = 0. Wait for 5ns.",
  "scenario 22": "Toggle clock to 0, apply a = 1. Wait for 5ns.",
  "scenario 23": "Toggle clock to 1, maintain a = 0. Wait for 5ns.",
  "scenario 24": "Toggle clock to 0, maintain a = 0. Wait for 5ns.",
  "scenario 25": "Maintain clock at 1, apply a = 1. Wait for 5ns.",
  "scenario 26": "Toggle clock to 0, maintain a = 1. Wait for 5ns."
}
below is the given testbench codes:
`timescale 1ns / 1ps
module testbench;
reg  clock;
reg  a;
wire  p;
wire  q;

integer file, scenario;
// DUT instantiation
top_module DUT (
	.clock(clock),
	.a(a),
	.p(p),
	.q(q)
);
// Clock generation
initial begin
    clock = 0;
    forever #5 clock = ~clock;
end

initial begin
    file = $fopen("TBout.txt", "w");
end
// Scenario Based Test
initial begin

    // write your scenario checking codes here, according to scenario information

    $fclose(file);
    $finish;
end

endmodule


The testbench does not need to check the DUT's output but only export the signals of DUT. Please export the signals of DUT to a file named "TBout.txt" at the end of each scenario. The template is given below:
$fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);
The variables are already declared. The clock signal is already prepared. This output will be used to check the correctness of the DUT's output later.
please only use "#10" as the delay when you need. If you need longer delay, you can use multiple "#10", such as "#10; #10; #10;". Avoid meaningless long delay in your code.
If you need a loop in a scenario to check multiple time points, use "repeat" loop. for exmaple:
```
// scenario x
scenario = x;
signal_1 = 1;
repeat(5) begin
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);
    #10;
end
```
Please determine the input signal's exact values according to given test scenarios. 
Note: please complete the last initial code part (marked in the given testbench template). You should give me the completed full code. The testbench template above is to help you generate the code. You must use %d when exporting values.
please generate the full testbench code. please only reply verilog codes, no other words. 



########## assistant ##########
```verilog
`timescale 1ns / 1ps
module testbench;
reg  clock;
reg  a;
wire  p;
wire  q;

integer file, scenario;
// DUT instantiation
top_module DUT (
	.clock(clock),
	.a(a),
	.p(p),
	.q(q)
);
// Clock generation
initial begin
    clock = 0;
    forever #5 clock = ~clock;
end

initial begin
    file = $fopen("TBout.txt", "w");
end

// Scenario Based Test
initial begin
    // Scenario 1
    scenario = 1;
    a = 0;
    #5; 
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);

    // Scenario 2
    scenario = 2;
    a = 0;
    #5;
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);

    // Scenario 3
    scenario = 3;
    a = 0;
    repeat(5) begin
        #10;
        $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);
    end

    // Scenario 4
    scenario = 4;
    a = 0;
    repeat(5) begin
        #10;
        $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);
    end

    // Scenario 5
    scenario = 5;
    a = 0;
    repeat(5) begin
        #10;
        $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);
    end

    // Scenario 6
    scenario = 6;
    a = 0;
    repeat(5) begin
        #10;
        $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);
    end

    // Scenario 7
    scenario = 7;
    a = 0;
    #5; 
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);

    // Scenario 8
    scenario = 8;
    a = 0;
    repeat(5) begin
        #10;
        $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);
    end

    // Scenario 9
    scenario = 9;
    a = 1;
    repeat(5) begin
        #10;
        $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);
    end

    // Scenario 10
    scenario = 10;
    a = 0;
    #5; 
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);

    // Scenario 11
    scenario = 11;
    a = 1;
    #5; 
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);

    // Scenario 12
    scenario = 12;
    a = 0;
    repeat(5) begin
        #10;
        $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);
    end

    // Scenario 13
    scenario = 13;
    a = 1;
    repeat(5) begin
        #10;
        $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);
    end

    // Scenario 14
    scenario = 14;
    a = 0;
    #5; 
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);

    // Scenario 15
    scenario = 15;
    a = 1;
    repeat(5) begin
        #10;
        $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);
    end

    // Scenario 16
    scenario = 16;
    a = 0;
    repeat(5) begin
        #10;
        $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);
    end

    // Scenario 17
    scenario = 17;
    a = 1;
    #5; 
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);

    // Scenario 18
    scenario = 18;
    a = 1;
    repeat(5) begin
        #10;
        $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);
    end

    // Scenario 19
    scenario = 19;
    a = 0;
    #5; 
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);

    // Scenario 20
    scenario = 20;
    a = 0;
    #5; 
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);

    // Scenario 21
    scenario = 21;
    a = 0;
    #5; 
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);

    // Scenario 22
    scenario = 22;
    a = 1;
    #5; 
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);

    // Scenario 23
    scenario = 23;
    a = 0;
    #5; 
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);

    // Scenario 24
    scenario = 24;
    a = 0;
    #5; 
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);

    // Scenario 25
    scenario = 25;
    a = 1;
    repeat(5) begin
        #10;
        $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);
    end

    // Scenario 26
    scenario = 26;
    a = 1;
    #5; 
    $fdisplay(file, "[check]scenario: %d, clock = %d, a = %d, p = %d, q = %d", scenario, clock, a, p, q);

    $fclose(file);
    $finish;
end

endmodule
```

