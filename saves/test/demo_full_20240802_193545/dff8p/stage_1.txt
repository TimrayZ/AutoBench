############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. You are in the first stage. In this stage, please summarize the technical details of the DUT and give me a technical specification of the testbench generation task, so we can use it to design its corresponding testbench.
3. The core of testbench is the testcases. It usually include two parts logically: the input signals to the DUT and the expected result signals from DUT. The testbench will send the input signals to DUT and check if the result signals are the same as the expected result signals. If they are the same, this means the DUT is passed. Otherwise the DUT fails.
4. Your technical specification should include these sections:
- section 1: specification of the DUT, including the module header of the RTL code. If table or other detailed data is provided in the original problem description, DO repeat them in your response. They are very important!!!
5. your response should be in the form of JSON.
6. below is the information including the problem description and the DUT header:
RTL circuit problem description:
Create 8 D flip-flops with active high synchronous reset. The flip-flops must be reset to 0x34 rather than zero. All DFFs should be triggered by the negative edge of clk.
DUT header:
module top_module(
	input clk,
	input [7:0] d,
	input reset,
	output reg [7:0] q);

your response must be in JSON form. example:
{
  "important data": "...", # type: string. If no table, state transition or other direct data, leave this with ""
  "technical specifications": ["...", "...", ...] # each element of the list is one specification string, the starting of the string is its index 
}



########## assistant ##########
{
  "important data": "The DUT implements 8 D flip-flops with active high synchronous reset, which resets the flip-flops to 0x34. The flip-flops are triggered by the negative edge of the clock.",
  "technical specifications": [
    "1. Module Header: module top_module(input clk, input [7:0] d, input reset, output reg [7:0] q);",
    "2. The DUT has 3 inputs: clk (clock signal), d (an 8-bit input), and reset (active high reset signal).",
    "3. The DUT has 1 output: q (an 8-bit output representing the state of the flip-flops).",
    "4. The DUT consists of 8 individual D flip-flops, which are triggered on the negative edge of clk.",
    "5. On receiving a high 'reset' signal, all flip-flops should reset their output to the value 0x34.",
    "6. When the reset is low, the output of each flip-flop should follow the corresponding input 'd' on the negative edge of clk."
  ]
}

