############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. you are in section 2. in this section, please give me the test scenarios. you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 
3. your information is:
RTL circuit problem description:
The following diagram is a Mealy machine implementation of the 2's complementer. Implement in Verilog using one-hot encoding. Resets into state A and reset is asynchronous active-high.

// A --x=0 (z=0)--> A
// A --x=1 (z=1)--> B
// B --x=0 (z=1)--> B
// B --x=1 (z=0)--> B
RTL testbench specification:
{
  "important data": "The Mealy machine has two states: A and B. In state A, when x=0, the output z=0 and remains in state A; when x=1, the output z=1 and transitions to state B. In state B, when x=0, the output z=1 and remains in state B; when x=1, the output z=0 and remains in state B. The machine resets to state A asynchronously when areset is high.",
  "technical specifications": [
    "1. The top module includes the following inputs and outputs: clk, areset, x, and z.",
    "2. The state machine operates with one-hot encoding, using two states A and B.",
    "3. The areset input is asynchronous and active-high, resetting the state to A.",
    "4. The output z is determined based on the current state and the input x using the specified state transition diagram."
  ]
}
DUT header:
module top_module (
	input clk,
	input areset,
	input x,
	output z
);


you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 

your response must be in JSON form. example:
{
  "scenario 1": "...", # each content is a string
  "scenario 2": "...",
  "scenario 3": "...",
  ...
}


########## assistant ##########
{
  "scenario 1": "Apply asynchronous reset by setting areset to high at clock cycle 0. Keep areset high for one clock cycle (cycle 0) and then set it to low at clock cycle 1.",
  "scenario 2": "After reset, apply x = 0 at clock cycle 2. Observe the behavior in state A for one clock cycle (cycle 2).",
  "scenario 3": "At clock cycle 3, apply x = 1 while in state A. Observe state transition to B during this clock cycle (cycle 3).",
  "scenario 4": "At clock cycle 4, keep x = 0. Observe the state while remaining in state B during this clock cycle (cycle 4).",
  "scenario 5": "At clock cycle 5, apply x = 1 while in state B. Observe the behavior for one clock cycle (cycle 5).",
  "scenario 6": "At clock cycle 6, apply x = 0. Observe the behavior in state B for one clock cycle (cycle 6).",
  "scenario 7": "At clock cycle 7, apply areset again by setting it to high. Keep it high for one clock cycle (cycle 7) and set it to low at clock cycle 8.",
  "scenario 8": "After reset, apply x = 1 at clock cycle 9. Observe the behavior in state A for one clock cycle (cycle 9).",
  "scenario 9": "At clock cycle 10, apply x = 1 while in state A. Observe the state transition to B during this clock cycle (cycle 10).",
  "scenario 10": "At clock cycle 11, keep x = 0. Observe the behavior in state B for the next clock cycle (cycle 11)."
}

