############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########

1. Your task is to complete a given verilog testbench code. This testbench is for a verilog RTL module code (we call it as "DUT", device under test). This circuit is a sequential circuit. The infomation we have is 
- 1.1. the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". 
- 1.2. the module header.
- 1.3. test scenarios which determines values and sequential information of test vectors
- 1.4. the testbench structure
- 1.5. the instruction of writing our testbench

DUT header:
module top_module (
	input d,
	input ena,
	output logic q
);

Your other information:
RTL circuit problem description:
Implement a D latch using an always block.

IMPORTANT - test scenario (Please determine the values of input signals according to these test scenarios.):
{
  "scenario 1": "Set input d to 0 and enable ena to high (1) at clock cycle 0. Monitor q for changes at clock cycle 1.",
  "scenario 2": "Set input d to 1 and enable ena to high (1) at clock cycle 2. Monitor q for changes at clock cycle 3.",
  "scenario 3": "Set input d to 0 and enable ena to low (0) at clock cycle 4. Observe q remains unchanged at clock cycle 5.",
  "scenario 4": "Change input d to 1 while ena is still low (0) at clock cycle 6. Monitor q for stability at clock cycle 7.",
  "scenario 5": "Change ena from low (0) to high (1) at clock cycle 8 while d remains 1. Monitor q for changes at clock cycle 9.",
  "scenario 6": "Set input d to 0 while ena is high (1) at clock cycle 10. Monitor q for changes at clock cycle 11.",
  "scenario 7": "Set ena to low (0) at clock cycle 12 while d is unchanged at 1. Monitor q for stability at clock cycle 13.",
  "scenario 8": "Toggle ena from low (0) to high (1) at clock cycle 14 and set d to 1. Monitor q at clock cycle 15 for confirmation of change.",
  "scenario 9": "Set d to 0 at clock cycle 16 while keeping ena high (1). Monitor q for changes at clock cycle 17.",
  "scenario 10": "Set ena back to low (0) at clock cycle 18 and input d to 1. Monitor q for stability at clock cycle 19."
}
below is the given testbench codes:
`timescale 1ns / 1ps
module testbench;
reg  d;
reg  ena;
wire  q;

integer file, scenario;
// DUT instantiation
top_module DUT (
	.d(d),
	.ena(ena),
	.q(q)
);

initial begin
    file = $fopen("TBout.txt", "w");
end
// Scenario Based Test
initial begin

    // write your scenario checking codes here, according to scenario information

    $fclose(file);
    $finish;
end

endmodule


The testbench does not need to check the DUT's output but only export the signals of DUT. Please export the signals of DUT to a file named "TBout.txt" at the end of each scenario. The template is given below:
$fdisplay(file, "[check]scenario: %d, d = %d, ena = %d, q = %d", scenario, d, ena, q);
The variables are already declared. The clock signal is already prepared. This output will be used to check the correctness of the DUT's output later.
please only use "#10" as the delay when you need. If you need longer delay, you can use multiple "#10", such as "#10; #10; #10;". Avoid meaningless long delay in your code.
If you need a loop in a scenario to check multiple time points, use "repeat" loop. for exmaple:
```
// scenario x
scenario = x;
signal_1 = 1;
repeat(5) begin
    $fdisplay(file, "[check]scenario: %d, d = %d, ena = %d, q = %d", scenario, d, ena, q);
    #10;
end
```
Please determine the input signal's exact values according to given test scenarios. 
Note: please complete the last initial code part (marked in the given testbench template). You should give me the completed full code. The testbench template above is to help you generate the code. You must use %d when exporting values.
please generate the full testbench code. please only reply verilog codes, no other words. 



########## assistant ##########
```verilog
`timescale 1ns / 1ps
module testbench;
reg  d;
reg  ena;
wire  q;

integer file, scenario;
// DUT instantiation
top_module DUT (
	.d(d),
	.ena(ena),
	.q(q)
);

initial begin
    file = $fopen("TBout.txt", "w");
end
// Scenario Based Test
initial begin

    // scenario 1
    scenario = 1;
    d = 0; ena = 1;
    #10;
    $fdisplay(file, "[check]scenario: %d, d = %d, ena = %d, q = %d", scenario, d, ena, q);
    #10;

    // scenario 2
    scenario = 2;
    d = 1; ena = 1;
    #10;
    $fdisplay(file, "[check]scenario: %d, d = %d, ena = %d, q = %d", scenario, d, ena, q);
    #10;

    // scenario 3
    scenario = 3;
    d = 0; ena = 0;
    #10;
    $fdisplay(file, "[check]scenario: %d, d = %d, ena = %d, q = %d", scenario, d, ena, q);
    #10;

    // scenario 4
    scenario = 4;
    d = 1; ena = 0;
    #10;
    $fdisplay(file, "[check]scenario: %d, d = %d, ena = %d, q = %d", scenario, d, ena, q);
    #10;

    // scenario 5
    scenario = 5;
    ena = 1;
    #10;
    $fdisplay(file, "[check]scenario: %d, d = %d, ena = %d, q = %d", scenario, d, ena, q);
    #10;

    // scenario 6
    scenario = 6;
    d = 0; ena = 1;
    #10;
    $fdisplay(file, "[check]scenario: %d, d = %d, ena = %d, q = %d", scenario, d, ena, q);
    #10;

    // scenario 7
    scenario = 7;
    ena = 0;
    #10;
    $fdisplay(file, "[check]scenario: %d, d = %d, ena = %d, q = %d", scenario, d, ena, q);
    #10;

    // scenario 8
    scenario = 8;
    ena = 1; d = 1;
    #10;
    $fdisplay(file, "[check]scenario: %d, d = %d, ena = %d, q = %d", scenario, d, ena, q);
    #10;

    // scenario 9
    scenario = 9;
    d = 0; ena = 1;
    #10;
    $fdisplay(file, "[check]scenario: %d, d = %d, ena = %d, q = %d", scenario, d, ena, q);
    #10;

    // scenario 10
    scenario = 10;
    ena = 0; d = 1;
    #10;
    $fdisplay(file, "[check]scenario: %d, d = %d, ena = %d, q = %d", scenario, d, ena, q);
    #10;

    $fclose(file);
    $finish;
end

endmodule
```

