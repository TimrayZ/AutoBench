############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. You are in the first stage. In this stage, please summarize the technical details of the DUT and give me a technical specification of the testbench generation task, so we can use it to design its corresponding testbench.
3. The core of testbench is the testcases. It usually include two parts logically: the input signals to the DUT and the expected result signals from DUT. The testbench will send the input signals to DUT and check if the result signals are the same as the expected result signals. If they are the same, this means the DUT is passed. Otherwise the DUT fails.
4. Your technical specification should include these sections:
- section 1: specification of the DUT, including the module header of the RTL code. If table or other detailed data is provided in the original problem description, DO repeat them in your response. They are very important!!!
5. your response should be in the form of JSON.
6. below is the information including the problem description and the DUT header:
RTL circuit problem description:
Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is active high synchronous, and should reset the counter to 0.
DUT header:
module top_module(
	input clk,
	input reset,
	output reg [3:0] q);

your response must be in JSON form. example:
{
  "important data": "...", # type: string. If no table, state transition or other direct data, leave this with ""
  "technical specifications": ["...", "...", ...] # each element of the list is one specification string, the starting of the string is its index 
}



########## assistant ##########
{
  "important data": "The decade counter should count from 0 through 9 and reset to 0 on the active high reset signal. The count should increment on the rising edge of the clock signal. This indicates the behaviour of the DUT in response to the clock and reset inputs, which is critical for the testbench design.",
  "technical specifications": [
    "1. The DUT module header is 'module top_module(input clk, input reset, output reg [3:0] q);'.",
    "2. The DUT has two inputs: 'clk' (clock signal) and 'reset' (active high synchronous reset signal).",
    "3. The DUT has one output: 'q' (4-bit register representing the current count value).",
    "4. The DUT should count from 0 to 9, then reset back to 0 when the count reaches 10.",
    "5. The DUT should implement synchronous reset functionality; when 'reset' is high at the rising edge of 'clk', 'q' should be set to 0.",
    "6. The counter increments on each rising edge of 'clk' if 'reset' is low."
  ]
}

