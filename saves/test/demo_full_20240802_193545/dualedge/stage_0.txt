############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
Please generate the verilog RTL code according to the following description and header information:
problem description:
A dual-edge triggered flip-flop is triggered on both edges of the clock. However, FPGAs don't have dual-edge triggered flip-flops, and always @(posedge clk or negedge clk) is not accepted as a legal sensitivity list. Build a circuit that functionally behaves like a dual-edge triggered flip-flop.
RTL header:
module top_module(
	input clk,
	input d,
	output reg q);

please only reply verilog codes. reply_format:
```verilog
your_code_here...
```


########## assistant ##########
```verilog
module top_module(
	input clk,
	input d,
	output reg q);

	reg d_ff1, d_ff2;

	always @(posedge clk) begin
		d_ff1 <= d;      // Capture D on the rising edge
		q <= d_ff1;      // Assign output on the rising edge
	end

	always @(negedge clk) begin
		d_ff2 <= d;      // Capture D on the falling edge
		q <= d_ff2;      // Assign output on the falling edge
	end

endmodule
```

