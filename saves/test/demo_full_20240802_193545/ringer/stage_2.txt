############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. you are in section 2. in this section, please give me the test scenarios. you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 
3. your information is:
RTL circuit problem description:
Suppose you are designing a circuit to control a cellphone's ringer and vibration motor. Whenever the phone needs to ring from an incoming call (input ring), your circuit must either turn on the ringer (output ringer = 1) or the motor (output motor = 1), but not both. If the phone is in vibrate mode (input vibrate_mode = 1), turn on the motor. Otherwise, turn on the ringer.
RTL testbench specification:
{
  "important data": "",
  "technical specifications": [
    "1. The DUT is a module named 'top_module' which has two input signals: 'ring' and 'vibrate_mode'.",
    "2. The output signals from the DUT are 'ringer' and 'motor'.",
    "3. When 'ring' is asserted (1) and 'vibrate_mode' is also asserted (1), the output should prioritize 'motor' to be on (motor = 1, ringer = 0).",
    "4. When 'ring' is asserted (1) and 'vibrate_mode' is not asserted (0), the output should turn on the ringer (ringer = 1, motor = 0).",
    "5. If 'ring' is not asserted (0), both outputs should be off (ringer = 0, motor = 0).",
    "6. The testbench must generate various test cases to validate all possible combinations of input signals and check the corresponding outputs."
  ]
}
DUT header:
module top_module(
	input ring, 
	input vibrate_mode,
	output ringer,
	output motor
);


you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 

your response must be in JSON form. example:
{
  "scenario 1": "...", # each content is a string
  "scenario 2": "...",
  "scenario 3": "...",
  ...
}


########## assistant ##########
{
  "scenario 1": "Set ring to 0 and vibrate_mode to 0 for 10 clock cycles. This tests the default state where no alerts are triggered.",
  "scenario 2": "Set ring to 0 and vibrate_mode to 1 for 10 clock cycles. This checks if the system remains idle with vibration mode enabled but no incoming call.",
  "scenario 3": "Set ring to 1 and vibrate_mode to 0 for 10 clock cycles. This tests the condition where an incoming call should activate the ringer.",
  "scenario 4": "Set ring to 1 and vibrate_mode to 1 for 10 clock cycles. This tests the priority of the vibration mode when both inputs are asserted.",
  "scenario 5": "Set ring to 1, then change vibrate_mode to 0 after 5 clock cycles. Observe the transition to verify the output reflects the change in state.",
  "scenario 6": "Set ring to 0, then change vibrate_mode to 1 after 5 clock cycles for 10 clock cycles. This ensures that the device remains idle under vibrate mode.",
  "scenario 7": "Cycle through all combinations of ring and vibrate_mode, pausing each combination for 5 clock cycles to observe stability in outputs: [0,0], [0,1], [1,0], [1,1]."
}

