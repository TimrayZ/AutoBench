############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. you are in section 2. in this section, please give me the test scenarios. you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 
3. your information is:
RTL circuit problem description:
Build a circuit that always outputs a LOW.
RTL testbench specification:
{
  "important data": "",
  "technical specifications": [
    "1. The DUT is defined as a Verilog module named 'top_module'.",
    "2. The module has a single output port named 'zero'.",
    "3. The expected behavior of the DUT is to always output a LOW signal.",
    "4. The testbench must generate test cases that will check the output 'zero' of the DUT to confirm it is LOW regardless of any other input signals.",
    "5. The testbench should include a section to instantiate the DUT, drive the necessary inputs (if any), and monitor the outputs.",
    "6. The pass criterion for the DUT is that the output 'zero' must constantly be LOW (0) during all test scenarios."
  ]
}
DUT header:
module top_module(
	output zero);


you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 

your response must be in JSON form. example:
{
  "scenario 1": "...", # each content is a string
  "scenario 2": "...",
  "scenario 3": "...",
  ...
}


########## assistant ##########
{
  "scenario 1": "Initialize the testbench. Wait for 1 clock cycle. Check the output 'zero'.",
  "scenario 2": "Apply no changes to the inputs (if any) and wait for 10 clock cycles. Check the output 'zero' repeatedly each cycle.",
  "scenario 3": "Toggle any other input signals (if applicable) at clock cycle 2 and then wait for 10 clock cycles. Monitor the output 'zero' during this period.",
  "scenario 4": "Reset any inputs (if applicable) at clock cycle 5 and hold for 5 clock cycles. Check the output 'zero' during this time.",
  "scenario 5": "Apply a high-frequency input signal (if applicable) starting at clock cycle 3, toggling every clock cycle for 10 cycles, and check the output 'zero' each cycle.",
  "scenario 6": "Introduce noise on the inputs (if applicable) at clock cycle 6 and maintain it for 5 clock cycles. Monitor the output 'zero' continuously."
}

