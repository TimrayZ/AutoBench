############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. you are in section 2. in this section, please give me the test scenarios. you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 
3. your information is:
RTL circuit problem description:
The 7400-series integrated circuits are a series of digital chips with a few gates each. The 7420 is a chip with two 4-input NAND gates.

// Create a module with the same functionality as the 7420 chip. It has 8 inputs and 2 outputs.
RTL testbench specification:
{
  "important data": "",
  "technical specifications": [
    "1. Specification of the DUT: The DUT is a digital module that mimics the functionality of the 7420 integrated circuit, which contains two 4-input NAND gates.",
    "2. The DUT has 8 input signals: p1a, p1b, p1c, p1d (for the first NAND gate) and p2a, p2b, p2c, p2d (for the second NAND gate).",
    "3. The DUT has 2 output signals: p1y (output for the first NAND gate) and p2y (output for the second NAND gate).",
    "4. The expected functionality of the outputs: p1y = ~(p1a & p1b & p1c & p1d) and p2y = ~(p2a & p2b & p2c & p2d).",
    "5. The testbench must include tests for all combinations of the input signals, ensuring that the output signals match the expected NAND gate behavior.",
    "6. The testbench should check for the edge cases such as all inputs being LOW and all inputs being HIGH, validating that the DUT respects the NAND logic."
  ]
}
DUT header:
module top_module(
	input p1a, 
	input p1b, 
	input p1c, 
	input p1d, 
	output p1y, 
	input p2a, 
	input p2b, 
	input p2c, 
	input p2d, 
	output p2y
);


you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 

your response must be in JSON form. example:
{
  "scenario 1": "...", # each content is a string
  "scenario 2": "...",
  "scenario 3": "...",
  ...
}


########## assistant ##########
{
  "scenario 1": "Set all inputs of the first NAND gate (p1a, p1b, p1c, p1d) to LOW (0) for clock cycle 0. Set all inputs of the second NAND gate (p2a, p2b, p2c, p2d) to LOW (0) for clock cycle 0.",
  "scenario 2": "At clock cycle 1, set p1a, p1b, p1c, and p1d to HIGH (1). Set p2a, p2b, p2c, and p2d to LOW (0).",
  "scenario 3": "At clock cycle 2, set p1a, p1b to HIGH (1), and p1c, p1d to LOW (0). For the second NAND gate, set p2a, p2b to LOW (0), and p2c, p2d to HIGH (1).",
  "scenario 4": "At clock cycle 3, set p1a, p1b, p1c to LOW (0) and p1d to HIGH (1). For the second NAND gate, set all inputs (p2a, p2b, p2c, p2d) to HIGH (1).",
  "scenario 5": "At clock cycle 4, set p1a, p1b, p1c, and p1d to HIGH (1). For the second NAND gate, set all inputs (p2a, p2b, p2c, p2d) to HIGH (1).",
  "scenario 6": "At clock cycle 5, set p1a, p1b, p1c, p1d to LOW (0). Set p2a, p2b, p2c, p2d to HIGH (1).",
  "scenario 7": "At clock cycle 6, cycle through all combinations of p1a, p1b, p1c, p1d being HIGH (1) and LOW (0), keeping p2a, p2b, p2c, p2d constant at LOW (0). Execute a full set of combinations, returning to LOW after each full cycle.",
  "scenario 8": "At clock cycle 7, cycle through all combinations of p2a, p2b, p2c, p2d being HIGH (1) and LOW (0), keeping p1a, p1b, p1c, p1d constant at LOW (0). Execute a full set of combinations, returning to LOW after each full cycle."
}

