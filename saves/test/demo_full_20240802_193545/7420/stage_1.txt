############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. You are in the first stage. In this stage, please summarize the technical details of the DUT and give me a technical specification of the testbench generation task, so we can use it to design its corresponding testbench.
3. The core of testbench is the testcases. It usually include two parts logically: the input signals to the DUT and the expected result signals from DUT. The testbench will send the input signals to DUT and check if the result signals are the same as the expected result signals. If they are the same, this means the DUT is passed. Otherwise the DUT fails.
4. Your technical specification should include these sections:
- section 1: specification of the DUT, including the module header of the RTL code. If table or other detailed data is provided in the original problem description, DO repeat them in your response. They are very important!!!
5. your response should be in the form of JSON.
6. below is the information including the problem description and the DUT header:
RTL circuit problem description:
The 7400-series integrated circuits are a series of digital chips with a few gates each. The 7420 is a chip with two 4-input NAND gates.

// Create a module with the same functionality as the 7420 chip. It has 8 inputs and 2 outputs.
DUT header:
module top_module(
	input p1a, 
	input p1b, 
	input p1c, 
	input p1d, 
	output p1y, 
	input p2a, 
	input p2b, 
	input p2c, 
	input p2d, 
	output p2y
);

your response must be in JSON form. example:
{
  "important data": "...", # type: string. If no table, state transition or other direct data, leave this with ""
  "technical specifications": ["...", "...", ...] # each element of the list is one specification string, the starting of the string is its index 
}



########## assistant ##########
{
  "important data": "",
  "technical specifications": [
    "1. Specification of the DUT: The DUT is a digital module that mimics the functionality of the 7420 integrated circuit, which contains two 4-input NAND gates.",
    "2. The DUT has 8 input signals: p1a, p1b, p1c, p1d (for the first NAND gate) and p2a, p2b, p2c, p2d (for the second NAND gate).",
    "3. The DUT has 2 output signals: p1y (output for the first NAND gate) and p2y (output for the second NAND gate).",
    "4. The expected functionality of the outputs: p1y = ~(p1a & p1b & p1c & p1d) and p2y = ~(p2a & p2b & p2c & p2d).",
    "5. The testbench must include tests for all combinations of the input signals, ensuring that the output signals match the expected NAND gate behavior.",
    "6. The testbench should check for the edge cases such as all inputs being LOW and all inputs being HIGH, validating that the DUT respects the NAND logic."
  ]
}

