############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
Please generate the verilog RTL code according to the following description and header information:
problem description:
Consider an n-bit shift register circuit. Inputs E are for enabling shift, R for value to load, L is asserted when it should load, and w is the input to the first stage of the shift register. Write a Verilog module named top_module for one stage of this circuit, including both the flip-flop and multiplexers.
RTL header:
module top_module (
	input clk,
	input w,
	input R,
	input E,
	input L,
	output reg Q
);

please only reply verilog codes. reply_format:
```verilog
your_code_here...
```


########## assistant ##########
```verilog
module top_module (
    input clk,
    input w,
    input R,
    input E,
    input L,
    output reg Q
);
    
    wire d; // Data input for the flip-flop
    wire load_data; // Data selected based on L and E
    
    // Multiplexer to select between w, R and current Q based on L and E
    assign load_data = (E && L) ? R : (E ? w : Q); // MUX logic
    
    always @(posedge clk) begin
        if (E) begin
            Q <= load_data; // Load new data on clock edge if enabled
        end
        // If not enabled, maintain the current state of Q
    end
    
endmodule
```

