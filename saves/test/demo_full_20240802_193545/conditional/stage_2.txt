############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. you are in section 2. in this section, please give me the test scenarios. you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 
3. your information is:
RTL circuit problem description:
Given four unsigned numbers, find the minimum. Unsigned numbers can be compared with standard comparison operators (a < b). 
RTL testbench specification:
{
  "important data": "Given four unsigned numbers, find the minimum. Unsigned numbers can be compared with standard comparison operators (a < b).",
  "technical specifications": [
    "1. DUT Module Header: module top_module (input [7:0] a, input [7:0] b, input [7:0] c, input [7:0] d, output reg [7:0] min);",
    "2. Input Signals: The DUT takes four 8-bit unsigned inputs: a, b, c, and d.",
    "3. Output Signal: The DUT produces one 8-bit unsigned output signal: min, which indicates the minimum of the four inputs.",
    "4. Functionality Requirement: The DUT should compare the four unsigned input numbers and output the minimum value.",
    "5. Testbench Objective: The testbench should generate various test cases by providing different combinations of input values and verify that the output min from the DUT matches the expected minimum value."
  ]
}
DUT header:
module top_module (
	input [7:0] a,
	input [7:0] b,
	input [7:0] c,
	input [7:0] d,
	output reg [7:0] min
);


you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 

your response must be in JSON form. example:
{
  "scenario 1": "...", # each content is a string
  "scenario 2": "...",
  "scenario 3": "...",
  ...
}


########## assistant ##########
{
  "scenario 1": "Set inputs a = 8'h03, b = 8'h05, c = 8'h02, d = 8'h04. Wait for 1 clock cycle to observe the output.",
  "scenario 2": "Set inputs a = 8'h00, b = 8'h00, c = 8'h00, d = 8'h00. Wait for 1 clock cycle to observe the output.",
  "scenario 3": "Set inputs a = 8'hFF, b = 8'h7F, c = 8'h80, d = 8'h01. Wait for 1 clock cycle to observe the output.",
  "scenario 4": "Set inputs a = 8'h10, b = 8'h20, c = 8'h30, d = 8'h40. Wait for 1 clock cycle to observe the output.",
  "scenario 5": "Set inputs a = 8'h99, b = 8'hAA, c = 8'h88, d = 8'h77. Wait for 1 clock cycle to observe the output.",
  "scenario 6": "Set inputs a = 8'h01, b = 8'h02, c = 8'h03, d = 8'h04. Wait for 1 clock cycle to observe the output.",
  "scenario 7": "Set inputs a = 8'h04, b = 8'h01, c = 8'h02, d = 8'h03. Wait for 1 clock cycle to observe the output.",
  "scenario 8": "Set inputs a = 8'h80, b = 8'h40, c = 8'h20, d = 8'h10. Wait for 1 clock cycle to observe the output.",
  "scenario 9": "Set inputs a = 8'hFE, b = 8'hFD, c = 8'hFC, d = 8'hFB. Wait for 1 clock cycle to observe the output.",
  "scenario 10": "Set inputs a = 8'h5A, b = 8'hA5, c = 8'h5F, d = 8'hA0. Wait for 1 clock cycle to observe the output."
}

