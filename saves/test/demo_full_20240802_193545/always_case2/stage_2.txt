############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. you are in section 2. in this section, please give me the test scenarios. you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 
3. your information is:
RTL circuit problem description:
A priority encoder is a combinational circuit that, when given an input bit vector, outputs the position of the first 1 bit in the vector. For example, a 8-bit priority encoder given the input 8'b10010000 would output 3'd4, because bit[4] is first bit that is high. Build a 4-bit priority encoder. For this problem, if none of the input bits are high (i.e., input is zero), output zero. Note that a 4-bit number has 16 possible combinations.
RTL testbench specification:
{
  "important data": "",
  "technical specifications": [
    "1. DUT module header: module top_module (input [3:0] in, output reg [1:0] pos);",
    "2. The DUT takes a 4-bit input vector and outputs a 2-bit position representing the index of the highest-priority input bit set to 1.",
    "3. If no input bits are set (input = 4'b0000), the output must also be 2'b00.",
    "4. The DUT must support all 16 possible combinations of the 4-bit input.",
    "5. The output position should be the index of the first '1' bit from the left (highest index priority) if an input is high."
  ]
}
DUT header:
module top_module (
	input [3:0] in,
	output reg [1:0] pos
);


you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 

your response must be in JSON form. example:
{
  "scenario 1": "...", # each content is a string
  "scenario 2": "...",
  "scenario 3": "...",
  ...
}


########## assistant ##########
{
  "scenario 1": "Set input to 4'b0000 and wait for 1 clock cycle.",
  "scenario 2": "Set input to 4'b0001 and wait for 1 clock cycle.",
  "scenario 3": "Set input to 4'b0010 and wait for 1 clock cycle.",
  "scenario 4": "Set input to 4'b0100 and wait for 1 clock cycle.",
  "scenario 5": "Set input to 4'b1000 and wait for 1 clock cycle.",
  "scenario 6": "Set input to 4'b0011 and wait for 1 clock cycle.",
  "scenario 7": "Set input to 4'b0101 and wait for 1 clock cycle.",
  "scenario 8": "Set input to 4'b1001 and wait for 1 clock cycle.",
  "scenario 9": "Set input to 4'b0110 and wait for 1 clock cycle.",
  "scenario 10": "Set input to 4'b1010 and wait for 1 clock cycle.",
  "scenario 11": "Set input to 4'b1100 and wait for 1 clock cycle.",
  "scenario 12": "Set input to 4'b1011 and wait for 1 clock cycle.",
  "scenario 13": "Set input to 4'b1101 and wait for 1 clock cycle.",
  "scenario 14": "Set input to 4'b1110 and wait for 1 clock cycle.",
  "scenario 15": "Set input to 4'b1111 and wait for 1 clock cycle."
}

