############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
given the scenario based verilog testbench code below:
`timescale 1ns / 1ps
module testbench;
reg  clk;
reg  x;
wire  z;

integer file, scenario;
// DUT instantiation
top_module DUT (
	.clk(clk),
	.x(x),
	.z(z)
);
// Clock generation
initial begin
    clk = 0;
    forever #5 clk = ~clk;
end

initial begin
    file = $fopen("TBout.txt", "w");
end
// Scenario Based Test
initial begin

    // scenario 1
    scenario = 1;
    x = 0;
    repeat(2) begin
        $fdisplay(file, "[check]scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
        #10;
    end

    // scenario 2
    scenario = 2;
    x = 1;
    $fdisplay(file, "[check]scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
    #10;

    // scenario 3
    scenario = 3;
    x = 0;
    repeat(2) begin
        $fdisplay(file, "[check]scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
        #10;
    end

    // scenario 4
    scenario = 4;
    x = 1;
    $fdisplay(file, "[check]scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
    #10;

    // scenario 5
    scenario = 5;
    x = 0;
    repeat(3) begin
        $fdisplay(file, "[check]scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
        #10;
    end

    // scenario 6
    scenario = 6;
    x = 1;
    repeat(4) begin
        $fdisplay(file, "[check]scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
        #10;
    end

    // scenario 7
    scenario = 7;
    x = 0;
    repeat(3) begin
        $fdisplay(file, "[check]scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
        #10;
    end

    $fclose(file);
    $finish;
end

endmodule


please help me to export the input of DUT module by using code below:

[IMPORTANT]:
$fdisplay(file, "scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);

you should insert the code above into scenario checking part. In each scenario, you should insert the code above after the input of DUT module changed. Don't delete the existing $display codes.

For example, for a circuit that has two input signals changed at different times in one scenario, the original code is like this:
- original code:
// scenario 1 begins
scenario = 1;
signal_1 = 1; 
// insert $fdisplay here
#10; 
signal_2 = 1; 
// insert $fdisplay here
#10; 
$fdisplay(file, "[check]scenario: %d, signal_1 = %d, signal_2 = %d", scenario, signal_1, signal_2); // this should be reserved. Never change the existing codes.
#10;
// scenario 1 ends

- after insertion:
// scenario 1 begins
scenario = 1;
signal_1 = 1;  
$fdisplay(file, "scenario: %d, signal_1 = %d, signal_2 = %d", scenario, signal_1, signal_2); 
#10;
signal_2 = 1;  
$fdisplay(file, "scenario: %d, signal_1 = %d, signal_2 = %d", scenario, signal_1, signal_2); 
#10;
$fdisplay(file, "[check]scenario: %d, signal_1 = %d, signal_2 = %d", scenario, signal_1, signal_2);
#10;
// scenario 1 ends

please insert codes according to the rules above. DO NOT modify other codes! please reply the modified full codes. please only reply verilog codes, no other words.


########## assistant ##########
```verilog
`timescale 1ns / 1ps
module testbench;
reg  clk;
reg  x;
wire  z;

integer file, scenario;
// DUT instantiation
top_module DUT (
	.clk(clk),
	.x(x),
	.z(z)
);
// Clock generation
initial begin
    clk = 0;
    forever #5 clk = ~clk;
end

initial begin
    file = $fopen("TBout.txt", "w");
end
// Scenario Based Test
initial begin

    // scenario 1
    scenario = 1;
    x = 0;  
    $fdisplay(file, "scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
    repeat(2) begin
        $fdisplay(file, "[check]scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
        #10;
    end

    // scenario 2
    scenario = 2;
    x = 1;  
    $fdisplay(file, "scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
    $fdisplay(file, "[check]scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
    #10;

    // scenario 3
    scenario = 3;
    x = 0;  
    $fdisplay(file, "scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
    repeat(2) begin
        $fdisplay(file, "[check]scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
        #10;
    end

    // scenario 4
    scenario = 4;
    x = 1;  
    $fdisplay(file, "scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
    $fdisplay(file, "[check]scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
    #10;

    // scenario 5
    scenario = 5;
    x = 0;  
    $fdisplay(file, "scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
    repeat(3) begin
        $fdisplay(file, "[check]scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
        #10;
    end

    // scenario 6
    scenario = 6;
    x = 1;  
    $fdisplay(file, "scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
    repeat(4) begin
        $fdisplay(file, "[check]scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
        #10;
    end

    // scenario 7
    scenario = 7;
    x = 0;  
    $fdisplay(file, "scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
    repeat(3) begin
        $fdisplay(file, "[check]scenario: %d, clk = %d, x = %d, z = %d", scenario, clk, x, z);
        #10;
    end

    $fclose(file);
    $finish;
end

endmodule
```

