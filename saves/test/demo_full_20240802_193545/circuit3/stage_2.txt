############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. you are in section 2. in this section, please give me the test scenarios. you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 
3. your information is:
RTL circuit problem description:
This is a combinational circuit. Read the simulation waveforms to determine what the circuit does, then implement it.

// time            a               b               c               d               q               
// 0ns             0               0               0               0               0               
// 5ns             0               0               0               0               0               
// 10ns            0               0               0               0               0               
// 15ns            0               0               0               0               0               
// 20ns            0               0               0               1               0               
// 25ns            0               0               1               0               0               
// 30ns            0               0               1               1               0               
// 35ns            0               1               0               0               0               
// 40ns            0               1               0               1               1               
// 45ns            0               1               1               0               1               
// 50ns            0               1               1               1               1               
// 55ns            1               0               0               0               0               
// 60ns            1               0               0               1               1               
// 65ns            1               0               1               0               1               
// 70ns            1               0               1               1               1               
// 75ns            1               1               0               0               0               
// 80ns            1               1               0               1               1               
// 85ns            1               1               1               0               1               
// 90ns            1               1               1               1               1               
RTL testbench specification:
{
  "important data": "Simulation waveforms showing the relationship between inputs (a, b, c, d) and output (q) at various time intervals.",
  "technical specifications": [
    "1. DUT is a combinational circuit with inputs 'a', 'b', 'c', 'd' and a single output 'q'.",
    "2. The DUT should evaluate the output 'q' based on the defined input transitions from the simulation waveforms.",
    "3. The output 'q' must be verified against expected values outlined in the simulation waveforms for corresponding inputs at each specified time interval.",
    "4. Testbench will consist of test cases that provide the various combinations of inputs and check the output against the expected result at specific simulation times.",
    "5. The test cases must cover all possible input combinations for inputs 'a', 'b', 'c', 'd' to ensure comprehensive verification."
  ]
}
DUT header:
module top_module (
	input a, 
	input b, 
	input c, 
	input d,
	output q
);


you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 

your response must be in JSON form. example:
{
  "scenario 1": "...", # each content is a string
  "scenario 2": "...",
  "scenario 3": "...",
  ...
}


########## assistant ##########
{
  "scenario 1": "At time 0ns, apply inputs a=0, b=0, c=0, d=0.",
  "scenario 2": "At time 20ns, change input to a=0, b=0, c=0, d=1.",
  "scenario 3": "At time 25ns, change input to a=0, b=0, c=1, d=0.",
  "scenario 4": "At time 30ns, change input to a=0, b=0, c=1, d=1.",
  "scenario 5": "At time 35ns, change input to a=0, b=1, c=0, d=0.",
  "scenario 6": "At time 40ns, change input to a=0, b=1, c=0, d=1.",
  "scenario 7": "At time 45ns, change input to a=0, b=1, c=1, d=0.",
  "scenario 8": "At time 50ns, change input to a=0, b=1, c=1, d=1.",
  "scenario 9": "At time 55ns, change input to a=1, b=0, c=0, d=0.",
  "scenario 10": "At time 60ns, change input to a=1, b=0, c=0, d=1.",
  "scenario 11": "At time 65ns, change input to a=1, b=0, c=1, d=0.",
  "scenario 12": "At time 70ns, change input to a=1, b=0, c=1, d=1.",
  "scenario 13": "At time 75ns, change input to a=1, b=1, c=0, d=0.",
  "scenario 14": "At time 80ns, change input to a=1, b=1, c=0, d=1.",
  "scenario 15": "At time 85ns, change input to a=1, b=1, c=1, d=0.",
  "scenario 16": "At time 90ns, change input to a=1, b=1, c=1, d=1."
}

