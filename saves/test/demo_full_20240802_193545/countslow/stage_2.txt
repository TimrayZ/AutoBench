############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. you are in section 2. in this section, please give me the test scenarios. you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 
3. your information is:
RTL circuit problem description:
Build a decade counter that counts from 0 through 9, inclusive, with a period of 10. The reset input is active high synchronous, and should reset the counter to 0. We want to be able to pause the counter rather than always incrementing every clock cycle, so the "slowena" input if high indicates when the counter should increment. 
RTL testbench specification:
{
  "important data": "",
  "technical specifications": [
    "1. DUT is a decade counter that counts from 0 to 9.",
    "2. The counter has a synchronous reset input (reset) that resets the counter to 0 when high.",
    "3. The counter increments only when the slowena input is high, indicating that the counter should increment.",
    "4. The DUT has the following ports: clk (input), slowena (input), reset (input), and q (4-bit output register).",
    "5. The counter should have a period of 10 clock cycles.",
    "6. The output q should reflect the current count of the decade counter."
  ]
}
DUT header:
module top_module(
	input clk,
	input slowena,
	input reset,
	output reg [3:0] q);


you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 

your response must be in JSON form. example:
{
  "scenario 1": "...", # each content is a string
  "scenario 2": "...",
  "scenario 3": "...",
  ...
}


########## assistant ##########
{
  "scenario 1": "Initialize the simulation with clk set to 0, slowena set to 0, and reset set to 0. After 5 clock cycles (clk high for 1 cycle and then low for 1 cycle), set reset high for 1 clock cycle and then return it to low.",
  "scenario 2": "Set slowena high after the reset has been released, and observe the counter incrementing on each clock cycle for 10 clock cycles. The clk should toggle every cycle.",
  "scenario 3": "Set slowena high for 5 clock cycles and then set it low for the next 5 clock cycles. Observe the output q during this time.",
  "scenario 4": "Set reset high at clock cycle 0, then return it low at clock cycle 1. Check that the output q is reset immediately and observe the output for 10 clock cycles while slowena is low.",
  "scenario 5": "Hold slowena high and simulate for 20 clock cycles while resetting the counter by setting reset high at clock cycle 10 and then low at clock cycle 11, continuing to check the output q.",
  "scenario 6": "Set slowena low and apply a series of reset pulses every 5 clock cycles, each lasting for 1 clock cycle. Ensure to toggle the clk appropriately."
}

