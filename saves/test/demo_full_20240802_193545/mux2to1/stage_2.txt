############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. you are in section 2. in this section, please give me the test scenarios. you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 
3. your information is:
RTL circuit problem description:
Create a one-bit wide, 2-to-1 multiplexer. When sel=0, choose a. When sel=1, choose b.
RTL testbench specification:
{
  "important data": "",
  "technical specifications": [
    "1. The DUT (Device Under Test) is a one-bit wide, 2-to-1 multiplexer.",
    "2. The DUT has three input signals: 'a' (input A), 'b' (input B), and 'sel' (selection signal).",
    "3. The DUT has one output signal: 'out'.",
    "4. When 'sel' is 0, the output 'out' should be equal to input 'a'.",
    "5. When 'sel' is 1, the output 'out' should be equal to input 'b'.",
    "6. The module header for the DUT is: module top_module (input a, input b, input sel, output out);"
  ]
}
DUT header:
module top_module (
	input a,
	input b,
	input sel,
	output out
);


you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 

your response must be in JSON form. example:
{
  "scenario 1": "...", # each content is a string
  "scenario 2": "...",
  "scenario 3": "...",
  ...
}


########## assistant ##########
{
  "scenario 1": "Set input 'a' to 0, input 'b' to 0, and 'sel' to 0. Apply this stimulus for 1 clock cycle.",
  "scenario 2": "Set input 'a' to 0, input 'b' to 1, and 'sel' to 0. Apply this stimulus for 1 clock cycle.",
  "scenario 3": "Set input 'a' to 1, input 'b' to 0, and 'sel' to 0. Apply this stimulus for 1 clock cycle.",
  "scenario 4": "Set input 'a' to 1, input 'b' to 1, and 'sel' to 0. Apply this stimulus for 1 clock cycle.",
  "scenario 5": "Set input 'a' to 0, input 'b' to 0, and 'sel' to 1. Apply this stimulus for 1 clock cycle.",
  "scenario 6": "Set input 'a' to 0, input 'b' to 1, and 'sel' to 1. Apply this stimulus for 1 clock cycle.",
  "scenario 7": "Set input 'a' to 1, input 'b' to 0, and 'sel' to 1. Apply this stimulus for 1 clock cycle.",
  "scenario 8": "Set input 'a' to 1, input 'b' to 1, and 'sel' to 1. Apply this stimulus for 1 clock cycle.",
  "scenario 9": "Set input 'a' to 0, input 'b' to 0, and toggle 'sel' between 0 and 1 every clock cycle for 4 clock cycles.",
  "scenario 10": "Randomly set inputs 'a' and 'b' to 0 or 1, and toggle 'sel' between 0 and 1 every clock cycle for 4 clock cycles."
}

