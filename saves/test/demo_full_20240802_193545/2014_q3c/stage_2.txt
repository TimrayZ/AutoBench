############################## conversation begin ##############################
########## system ##########
You are the strongest AI in the world. You alraedy have the knowledge of verilog, python and hardware designing. Do not save words by discarding information. I will tip you 200$ if you can fullfill the tasks I give you.

########## user ##########
1. Your task is to write a verilog testbench for an verilog RTL module code (we call it as "DUT", device under test). The infomation we have is the problem description that guides student to write the RTL code (DUT) and the header of the "DUT". Our target is to generate the verilog testbench for the DUT. This testbench can check if the DUT in verilog satisfies all technical requirements of the problem description.
2. you are in section 2. in this section, please give me the test scenarios. you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 
3. your information is:
RTL circuit problem description:
Given the state-assigned table shown below, implement the logic functions Y[0] and z.
// Present state y[2:0] | Next state Y[2:0] x=0, Next state Y[2:0] x=1 | Output z
// 000 | 000, 001 | 0
// 001 | 001, 100 | 0
// 010 | 010, 001 | 0
// 011 | 001, 010 | 1
// 100 | 011, 100 | 1

RTL testbench specification:
{
  "important data": "State-assigned table for state transitions and outputs: Present state y[2:0] | Next state Y[2:0] x=0, Next state Y[2:0] x=1 | Output z\n000 | 000, 001 | 0\n001 | 001, 100 | 0\n010 | 010, 001 | 0\n011 | 001, 010 | 1\n100 | 011, 100 | 1",
  "technical specifications": [
    "1: DUT module header - module top_module (input clk, input x, input [2:0] y, output reg Y0, output reg z)",
    "2: Testbench should instantiate the DUT module and drive the clk, x, and y inputs.",
    "3: Generate a clock signal in the testbench for timing control.",
    "4: Testbench must include a variety of input test cases (x = 0 and x = 1) and corresponding states y to validate state transitions and output z as defined in the problem description.",
    "5: For each state, validate the output z based on the given transition table and check if the output Y0 also meets the expected results.",
    "6: Each test case in the testbench shall monitor the output and log the results (pass/fail) based on the expected output."
  ]
}
DUT header:
module top_module (
	input clk,
	input x,
	input [2:0] y,
	output reg Y0,
	output reg z
);


you only need to describe the stimulus in each test scenarios. If time is important, please inform the clock cycle information. we will use the stimulus description to generate the test vectors and send them to DUT. you must not tell the expected results even though you know that. 

your response must be in JSON form. example:
{
  "scenario 1": "...", # each content is a string
  "scenario 2": "...",
  "scenario 3": "...",
  ...
}


########## assistant ##########
{
  "scenario 1": "Initialize y to 3'b000, set x to 0. Apply the clock for 10 cycles while monitoring states and outputs.",
  "scenario 2": "Set y to 3'b000, change x to 1. Apply the clock for 10 cycles while monitoring states and outputs.",
  "scenario 3": "Set y to 3'b001, set x to 0. Apply the clock for 10 cycles while monitoring states and outputs.",
  "scenario 4": "Set y to 3'b001, change x to 1. Apply the clock for 10 cycles while monitoring states and outputs.",
  "scenario 5": "Set y to 3'b010, set x to 0. Apply the clock for 10 cycles while monitoring states and outputs.",
  "scenario 6": "Set y to 3'b010, change x to 1. Apply the clock for 10 cycles while monitoring states and outputs.",
  "scenario 7": "Set y to 3'b011, set x to 0. Apply the clock for 10 cycles while monitoring states and outputs.",
  "scenario 8": "Set y to 3'b011, change x to 1. Apply the clock for 10 cycles while monitoring states and outputs.",
  "scenario 9": "Set y to 3'b100, set x to 0. Apply the clock for 10 cycles while monitoring states and outputs.",
  "scenario 10": "Set y to 3'b100, change x to 1. Apply the clock for 10 cycles while monitoring states and outputs."
}

